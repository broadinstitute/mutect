<!--
  ~ Copyright (c) 2010 The Broad Institute
  ~ Permission is hereby granted, free of charge, to any person
  ~ obtaining a copy of this software and associated documentation
  ~ files (the "Software"), to deal in the Software without
  ~ restriction, including without limitation the rights to use,
  ~ copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the
  ~ Software is furnished to do so, subject to the following
  ~ conditions:
  ~
  ~ The above copyright notice and this permission notice shall be
  ~ included in all copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  ~ EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
  ~ OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
  ~ NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
  ~ HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
  ~ WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
  ~ FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
  ~ OTHER DEALINGS IN THE SOFTWARE.
  -->
<project name="CancerGenomeAnalysisTools">
    <description>Build the GATK examples</description>
    

    <!--*******************************************************-->
    <!-- Targets for generating the build version of this tool -->
    <!--*******************************************************-->
    <target name="git.describe">
      <exec executable="git" outputproperty="git.describe.output" resultproperty="git.describe.exit.value" failonerror="false">
        <arg line="describe --long" />
      </exec>
      <condition property="git.describe.succeeded">
        <equals arg1="${git.describe.exit.value}" arg2="0" />
      </condition>
    </target>

    <target name="tagged.build.version" depends="git.describe" if="git.describe.succeeded">
        <property name="build.version" value="${git.describe.output}" />
    </target>

    <target name="git.rev-parse" depends="git.describe" unless="git.describe.succeeded">
      <exec executable="git" outputproperty="git.rev-parse.output" resultproperty="git.rev-parse.exit.value" failonerror="false">
        <arg line="rev-parse --short HEAD" />
      </exec>
      <condition property="git.rev-parse.succeeded">
        <equals arg1="${git.rev-parse.exit.value}" arg2="0" />
      </condition>
    </target>

    <target name="untagged.build.version" depends="git.rev-parse" if="git.rev-parse.succeeded">
        <property name="build.version" value="${git.rev-parse.output}" />
    </target>

    <target name="generate.build.version" depends="tagged.build.version, untagged.build.version">
        <!-- Set build.version to exported if no other value has been set -->
        <property name="build.version" value="exported" />
    </target>
	<!-- **************************************************** -->
    
    <target name="init" depends="generate.build.version" >
        <echo message="build.dir = ${build.dir}" />
        <echo message="dist.dir = ${dist.dir}" />
        <echo message="gatk.classpath = ${gatk.classpath}" />
	<echo message="Tool=${executable} version=${build.version} " />        
    </target>
    
    <target name="compile" depends="init,insertversion">
        <javac srcdir="src" destdir="${build.dir}" classpath="${gatk.classpath}" debug="true" debuglevel="lines,vars,source" />
    </target>

    <target name="insertversion" depends="generate.build.version">
	<echo message="${build.dir}/CGAText.properties" />
	<concat destfile="${build.dir}/CGAText.properties">version=${build.version}</concat>
    </target>

    <target name="dist" depends="init,compile,insertversion">
        <jar jarfile="${dist.dir}/CancerGenomeAnalysisTools.jar">
            <fileset dir="${build.dir}" includes="org/broadinstitute/cga/tools/gatk/walkers/cancer/**" />
            <fileset dir="${build.dir}" includes="org/broadinstitute/cga/tools/gatk/utils/**" />
            <fileset dir="${build.dir}" includes="CGAText.properties" />
        </jar>
    </target>
</project>
